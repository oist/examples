apply plugin: 'com.android.application'
apply plugin: 'de.undercouch.download'

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/oist/smartphone-robot")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven { url 'https://jitpack.io' }
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "org.tensorflow.lite.examples.detection"
        minSdkVersion 24
        targetSdkVersion 30
        compileSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    flavorDimensions "tfliteInference"
    productFlavors {
       // The TFLite inference is built using the TFLite Java interpreter.
       interpreter {
           dimension "tfliteInference"
       }
       // Default: The TFLite inference is built using the TFLite Task library (high-level API).
       taskApi {
           getIsDefault().set(true)
           dimension "tfliteInference"
       }
        artExhibit {
            dimension "tfliteInference"
        }
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
apply from:'download_model.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    interpreterImplementation project(":lib_interpreter")
    taskApiImplementation project(":lib_task_api")
    artExhibitImplementation project(":lib_task_api")
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'io.github.nishkarsh:android-permissions:2.0.54'
    implementation "androidx.camera:camera-camera2:1.1.0-alpha07"
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:android-integration:3.3.0'
    implementation 'com.github.Lokarzz:perfectTune:1.0.5'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.4.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    implementation 'jp.oist:abcvlib:0.7.9'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'eo.view:batterymeter:2.0.0'
}
